# audio/generate_guide.py
from pydub import AudioSegment
import os
from audio.tts_service import get_audio

def create_fartlek_guide(phases):
    combined = AudioSegment.silent(duration=0)

    for i, phase in enumerate(phases):
        # –¢–µ–∫—Å—Ç —Ñ—Ä–∞–∑—ã
        if phase.phase_type == "warmup":
            text = "üî• –†–∞–∑–º–∏–Ω–∫–∞! 5 –º–∏–Ω—É—Ç –ª—ë–≥–∫–æ–≥–æ –±–µ–≥–∞. –î—ã—à–∏ —Ä–æ–≤–Ω–æ."
        elif phase.phase_type == "run":
            text = f"üü° –ò–Ω—Ç–µ—Ä–≤–∞–ª: {phase.duration // 60} –º–∏–Ω—É—Ç –≤ —É—Å–∫–æ—Ä–µ–Ω–Ω–æ–º —Ç–µ–º–ø–µ!"
        elif phase.phase_type == "rest":
            text = f"üü¢ –û—Ç–¥—ã—Ö: {phase.duration // 60} –º–∏–Ω—É—Ç. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Å—å."
        elif phase.phase_type == "cooldown":
            text = "üîµ –ó–∞–º–∏–Ω–∫–∞. 3 –º–∏–Ω—É—Ç—ã —Ö–æ–¥—å–±—ã. –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!"
        else:
            continue

        print(f"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–∑—É {i+1}: {text[:30]}...")

        # –ü–æ–ª—É—á–∞–µ–º –∞—É–¥–∏–æ
        try:
            audio_path = get_audio(text)
            print(f"–ê—É–¥–∏–æ –ø—É—Ç—å: {audio_path}")
            
            if os.path.exists(audio_path):
                audio = AudioSegment.from_file(audio_path)
                combined += audio
                # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—É–∑—É
                combined += AudioSegment.silent(duration=phase.duration * 1000)
                print(f"–î–æ–±–∞–≤–ª–µ–Ω–∞ –ø–∞—É–∑–∞: {phase.duration} —Å–µ–∫")
            else:
                print(f"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {audio_path}")
                # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–∞—É–∑—É
                combined += AudioSegment.silent(duration=phase.duration * 1000)
                
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–∑—ã: {e}")
            combined += AudioSegment.silent(duration=phase.duration * 1000)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º
    output_path = os.path.join("audio_cache", "full_guide.wav")
    combined.export(output_path, format="wav")
    print(f"–ê—É–¥–∏–æ–≥–∏–¥ —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {output_path}")
    return output_path